// <auto-generated />
using System;
using BloodTypeWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BloodTypeWeb.Migrations
{
    [DbContext(typeof(BloodTypeDbContext))]
    [Migration("20240405190125_SeedInitialData")]
    partial class SeedInitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.2.24128.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BloodTypeWeb.Areas.Identity.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PregnancyTerm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("BloodTypeWeb.Models.BloodType", b =>
                {
                    b.Property<string>("BloodTypeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BloodTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BloodTypeID");

                    b.ToTable("BloodTypes");

                    b.HasData(
                        new
                        {
                            BloodTypeID = "O",
                            BloodTypeName = "O"
                        },
                        new
                        {
                            BloodTypeID = "A",
                            BloodTypeName = "A"
                        },
                        new
                        {
                            BloodTypeID = "B",
                            BloodTypeName = "B"
                        },
                        new
                        {
                            BloodTypeID = "AB",
                            BloodTypeName = "AB"
                        });
                });

            modelBuilder.Entity("BloodTypeWeb.Models.ChildOutcomeRh", b =>
                {
                    b.Property<int>("OutcomeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OutcomeID"));

                    b.Property<string>("ChildBloodTypeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ChildRhFactorID")
                        .HasColumnType("int");

                    b.Property<int>("CombinationID")
                        .HasColumnType("int");

                    b.Property<string>("Probability")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OutcomeID");

                    b.HasIndex("ChildBloodTypeID");

                    b.HasIndex("ChildRhFactorID");

                    b.HasIndex("CombinationID");

                    b.ToTable("ChildOutcomesRh");

                    b.HasData(
                        new
                        {
                            OutcomeID = 1,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 1,
                            CombinationID = 1,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 2,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 2,
                            CombinationID = 1,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 3,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 1,
                            CombinationID = 2,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 4,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 2,
                            CombinationID = 2,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 5,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 1,
                            CombinationID = 3,
                            Probability = "94%"
                        },
                        new
                        {
                            OutcomeID = 6,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 2,
                            CombinationID = 3,
                            Probability = "6%"
                        },
                        new
                        {
                            OutcomeID = 7,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 2,
                            CombinationID = 4,
                            Probability = "100%"
                        },
                        new
                        {
                            OutcomeID = 8,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 1,
                            CombinationID = 5,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 9,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 2,
                            CombinationID = 5,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 10,
                            ChildBloodTypeID = "A",
                            ChildRhFactorID = 1,
                            CombinationID = 5,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 11,
                            ChildBloodTypeID = "A",
                            ChildRhFactorID = 2,
                            CombinationID = 5,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 12,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 1,
                            CombinationID = 6,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 13,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 2,
                            CombinationID = 6,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 14,
                            ChildBloodTypeID = "A",
                            ChildRhFactorID = 1,
                            CombinationID = 6,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 15,
                            ChildBloodTypeID = "A",
                            ChildRhFactorID = 2,
                            CombinationID = 6,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 16,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 1,
                            CombinationID = 7,
                            Probability = "94%"
                        },
                        new
                        {
                            OutcomeID = 17,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 2,
                            CombinationID = 7,
                            Probability = "6%"
                        },
                        new
                        {
                            OutcomeID = 18,
                            ChildBloodTypeID = "A",
                            ChildRhFactorID = 1,
                            CombinationID = 7,
                            Probability = "94%"
                        },
                        new
                        {
                            OutcomeID = 19,
                            ChildBloodTypeID = "A",
                            ChildRhFactorID = 2,
                            CombinationID = 7,
                            Probability = "6%"
                        },
                        new
                        {
                            OutcomeID = 20,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 2,
                            CombinationID = 8,
                            Probability = "100%"
                        },
                        new
                        {
                            OutcomeID = 21,
                            ChildBloodTypeID = "A",
                            ChildRhFactorID = 2,
                            CombinationID = 8,
                            Probability = "100%"
                        },
                        new
                        {
                            OutcomeID = 22,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 1,
                            CombinationID = 9,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 23,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 2,
                            CombinationID = 9,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 24,
                            ChildBloodTypeID = "B",
                            ChildRhFactorID = 1,
                            CombinationID = 9,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 25,
                            ChildBloodTypeID = "B",
                            ChildRhFactorID = 2,
                            CombinationID = 9,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 26,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 1,
                            CombinationID = 10,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 27,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 2,
                            CombinationID = 10,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 28,
                            ChildBloodTypeID = "B",
                            ChildRhFactorID = 1,
                            CombinationID = 10,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 29,
                            ChildBloodTypeID = "B",
                            ChildRhFactorID = 2,
                            CombinationID = 10,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 30,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 1,
                            CombinationID = 11,
                            Probability = "94%"
                        },
                        new
                        {
                            OutcomeID = 31,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 2,
                            CombinationID = 11,
                            Probability = "6%"
                        },
                        new
                        {
                            OutcomeID = 32,
                            ChildBloodTypeID = "B",
                            ChildRhFactorID = 1,
                            CombinationID = 11,
                            Probability = "94%"
                        },
                        new
                        {
                            OutcomeID = 33,
                            ChildBloodTypeID = "B",
                            ChildRhFactorID = 2,
                            CombinationID = 11,
                            Probability = "6%"
                        },
                        new
                        {
                            OutcomeID = 34,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 2,
                            CombinationID = 12,
                            Probability = "100%"
                        },
                        new
                        {
                            OutcomeID = 35,
                            ChildBloodTypeID = "B",
                            ChildRhFactorID = 2,
                            CombinationID = 12,
                            Probability = "100%"
                        },
                        new
                        {
                            OutcomeID = 36,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 1,
                            CombinationID = 9,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 37,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 2,
                            CombinationID = 9,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 38,
                            ChildBloodTypeID = "AB",
                            ChildRhFactorID = 1,
                            CombinationID = 9,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 39,
                            ChildBloodTypeID = "AB",
                            ChildRhFactorID = 2,
                            CombinationID = 9,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 40,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 1,
                            CombinationID = 10,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 41,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 2,
                            CombinationID = 10,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 42,
                            ChildBloodTypeID = "AB",
                            ChildRhFactorID = 1,
                            CombinationID = 10,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 43,
                            ChildBloodTypeID = "AB",
                            ChildRhFactorID = 2,
                            CombinationID = 10,
                            Probability = "50%"
                        },
                        new
                        {
                            OutcomeID = 44,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 1,
                            CombinationID = 11,
                            Probability = "94%"
                        },
                        new
                        {
                            OutcomeID = 45,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 2,
                            CombinationID = 11,
                            Probability = "6%"
                        },
                        new
                        {
                            OutcomeID = 46,
                            ChildBloodTypeID = "AB",
                            ChildRhFactorID = 1,
                            CombinationID = 11,
                            Probability = "94%"
                        },
                        new
                        {
                            OutcomeID = 47,
                            ChildBloodTypeID = "AB",
                            ChildRhFactorID = 2,
                            CombinationID = 11,
                            Probability = "6%"
                        },
                        new
                        {
                            OutcomeID = 48,
                            ChildBloodTypeID = "O",
                            ChildRhFactorID = 2,
                            CombinationID = 12,
                            Probability = "100%"
                        },
                        new
                        {
                            OutcomeID = 49,
                            ChildBloodTypeID = "AB",
                            ChildRhFactorID = 2,
                            CombinationID = 12,
                            Probability = "100%"
                        });
                });

            modelBuilder.Entity("BloodTypeWeb.Models.ParentCombinationRh", b =>
                {
                    b.Property<int>("CombinationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CombinationID"));

                    b.Property<string>("FatherBloodTypeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("FatherRhFactorID")
                        .HasColumnType("int");

                    b.Property<string>("MotherBloodTypeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MotherRhFactorID")
                        .HasColumnType("int");

                    b.HasKey("CombinationID");

                    b.HasIndex("FatherBloodTypeID");

                    b.HasIndex("FatherRhFactorID");

                    b.HasIndex("MotherBloodTypeID");

                    b.HasIndex("MotherRhFactorID");

                    b.ToTable("ParentCombinationsRh");

                    b.HasData(
                        new
                        {
                            CombinationID = 1,
                            FatherBloodTypeID = "O",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "O",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 2,
                            FatherBloodTypeID = "O",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "O",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 3,
                            FatherBloodTypeID = "O",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "O",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 4,
                            FatherBloodTypeID = "O",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "O",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 5,
                            FatherBloodTypeID = "A",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "O",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 6,
                            FatherBloodTypeID = "A",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "O",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 7,
                            FatherBloodTypeID = "A",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "O",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 8,
                            FatherBloodTypeID = "A",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "O",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 9,
                            FatherBloodTypeID = "B",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "O",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 10,
                            FatherBloodTypeID = "B",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "O",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 11,
                            FatherBloodTypeID = "B",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "O",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 12,
                            FatherBloodTypeID = "B",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "O",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 13,
                            FatherBloodTypeID = "AB",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "O",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 14,
                            FatherBloodTypeID = "AB",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "O",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 15,
                            FatherBloodTypeID = "AB",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "O",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 16,
                            FatherBloodTypeID = "AB",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "O",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 17,
                            FatherBloodTypeID = "A",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "A",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 18,
                            FatherBloodTypeID = "A",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "A",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 19,
                            FatherBloodTypeID = "A",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "A",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 20,
                            FatherBloodTypeID = "A",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "A",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 21,
                            FatherBloodTypeID = "O",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "A",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 22,
                            FatherBloodTypeID = "O",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "A",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 23,
                            FatherBloodTypeID = "O",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "A",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 24,
                            FatherBloodTypeID = "O",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "A",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 25,
                            FatherBloodTypeID = "B",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "A",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 26,
                            FatherBloodTypeID = "B",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "A",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 27,
                            FatherBloodTypeID = "B",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "A",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 28,
                            FatherBloodTypeID = "B",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "A",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 29,
                            FatherBloodTypeID = "AB",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "A",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 30,
                            FatherBloodTypeID = "AB",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "A",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 31,
                            FatherBloodTypeID = "AB",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "A",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 32,
                            FatherBloodTypeID = "AB",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "A",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 33,
                            FatherBloodTypeID = "B",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "B",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 34,
                            FatherBloodTypeID = "B",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "B",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 35,
                            FatherBloodTypeID = "B",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "B",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 36,
                            FatherBloodTypeID = "B",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "B",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 37,
                            FatherBloodTypeID = "O",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "B",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 38,
                            FatherBloodTypeID = "O",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "B",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 39,
                            FatherBloodTypeID = "O",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "B",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 40,
                            FatherBloodTypeID = "O",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "B",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 41,
                            FatherBloodTypeID = "A",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "B",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 42,
                            FatherBloodTypeID = "A",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "B",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 43,
                            FatherBloodTypeID = "A",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "B",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 44,
                            FatherBloodTypeID = "A",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "B",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 45,
                            FatherBloodTypeID = "AB",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "B",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 46,
                            FatherBloodTypeID = "AB",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "B",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 47,
                            FatherBloodTypeID = "AB",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "B",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 48,
                            FatherBloodTypeID = "AB",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "B",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 49,
                            FatherBloodTypeID = "AB",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "AB",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 50,
                            FatherBloodTypeID = "AB",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "AB",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 51,
                            FatherBloodTypeID = "AB",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "AB",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 52,
                            FatherBloodTypeID = "AB",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "AB",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 53,
                            FatherBloodTypeID = "O",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "AB",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 54,
                            FatherBloodTypeID = "O",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "AB",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 55,
                            FatherBloodTypeID = "O",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "AB",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 56,
                            FatherBloodTypeID = "O",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "AB",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 57,
                            FatherBloodTypeID = "A",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "AB",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 58,
                            FatherBloodTypeID = "A",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "AB",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 59,
                            FatherBloodTypeID = "A",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "AB",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 60,
                            FatherBloodTypeID = "A",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "AB",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 61,
                            FatherBloodTypeID = "B",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "AB",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 62,
                            FatherBloodTypeID = "B",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "AB",
                            MotherRhFactorID = 2
                        },
                        new
                        {
                            CombinationID = 63,
                            FatherBloodTypeID = "B",
                            FatherRhFactorID = 1,
                            MotherBloodTypeID = "AB",
                            MotherRhFactorID = 1
                        },
                        new
                        {
                            CombinationID = 64,
                            FatherBloodTypeID = "B",
                            FatherRhFactorID = 2,
                            MotherBloodTypeID = "AB",
                            MotherRhFactorID = 2
                        });
                });

            modelBuilder.Entity("BloodTypeWeb.Models.RhFactor", b =>
                {
                    b.Property<int>("RhFactorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RhFactorID"));

                    b.Property<string>("RhFactorType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RhFactorID");

                    b.ToTable("RhFactors");

                    b.HasData(
                        new
                        {
                            RhFactorID = 1,
                            RhFactorType = "+"
                        },
                        new
                        {
                            RhFactorID = 2,
                            RhFactorType = "-"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BloodTypeWeb.Models.ChildOutcomeRh", b =>
                {
                    b.HasOne("BloodTypeWeb.Models.BloodType", "ChildBloodType")
                        .WithMany("ChildOutcomes")
                        .HasForeignKey("ChildBloodTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BloodTypeWeb.Models.RhFactor", "ChildRhFactor")
                        .WithMany("ChildOutcomes")
                        .HasForeignKey("ChildRhFactorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BloodTypeWeb.Models.ParentCombinationRh", "ParentCombination")
                        .WithMany("ChildOutcomes")
                        .HasForeignKey("CombinationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChildBloodType");

                    b.Navigation("ChildRhFactor");

                    b.Navigation("ParentCombination");
                });

            modelBuilder.Entity("BloodTypeWeb.Models.ParentCombinationRh", b =>
                {
                    b.HasOne("BloodTypeWeb.Models.BloodType", "FatherBloodType")
                        .WithMany("FatherCombinations")
                        .HasForeignKey("FatherBloodTypeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BloodTypeWeb.Models.RhFactor", "FatherRhFactor")
                        .WithMany("FatherCombinations")
                        .HasForeignKey("FatherRhFactorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BloodTypeWeb.Models.BloodType", "MotherBloodType")
                        .WithMany("MotherCombinations")
                        .HasForeignKey("MotherBloodTypeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BloodTypeWeb.Models.RhFactor", "MotherRhFactor")
                        .WithMany("MotherCombinations")
                        .HasForeignKey("MotherRhFactorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FatherBloodType");

                    b.Navigation("FatherRhFactor");

                    b.Navigation("MotherBloodType");

                    b.Navigation("MotherRhFactor");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BloodTypeWeb.Areas.Identity.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BloodTypeWeb.Areas.Identity.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BloodTypeWeb.Areas.Identity.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BloodTypeWeb.Areas.Identity.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BloodTypeWeb.Models.BloodType", b =>
                {
                    b.Navigation("ChildOutcomes");

                    b.Navigation("FatherCombinations");

                    b.Navigation("MotherCombinations");
                });

            modelBuilder.Entity("BloodTypeWeb.Models.ParentCombinationRh", b =>
                {
                    b.Navigation("ChildOutcomes");
                });

            modelBuilder.Entity("BloodTypeWeb.Models.RhFactor", b =>
                {
                    b.Navigation("ChildOutcomes");

                    b.Navigation("FatherCombinations");

                    b.Navigation("MotherCombinations");
                });
#pragma warning restore 612, 618
        }
    }
}
